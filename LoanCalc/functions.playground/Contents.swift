
import UIKit
/*
1. Создайте пару функций с короткими именами, которые возвращают строку с классным символом или символами. Например heart() возвращает сердце и т.п. Вызовите все эти функции внутри принта для вывода строки этих символов путем конкатенации.

2. Опять шахматные клетки. Реализовать функцию, которая принимает букву и символ и возвращает строку “белая” или “черная”. Строку потом распечатайте в консоль

3. Создайте функцию, которая принимает массив, а возвращает массив в обратном порядке. Можете создать еще одну, которая принимает последовательность и возвращает массив в обратном порядке. Чтобы не дублировать код, сделайте так, чтобы функция с последовательностью вызывала первую.

4. Разберитесь с inout самостоятельно и выполните задание номер 3 так, чтобы функция не возвращала перевернутый массив, но меняла элементы в существующем. Что будет если убрать inout?

5. Создайте функцию, которая принимает строку, убирает из нее все знаки препинания, делает все гласные большими буквами, согласные маленькими, а цифры меняет на соответствующие слова (9 -> nine и тд)
*/

////////////1
func heart() -> Character {
  return "\u{1F47E}"
}

func bicycle() -> Character {
  return "\u{1F6B5}"
}

func thumbUp() -> Character {
  return "\u{1F44D}"
}

let h = heart()
let b = bicycle()

print("\(h) \(b) \(thumbUp())")



///////////////2
func blackOrWhite(row: Int, column: Int) -> String? {
  return (row % 2 == column % 2) ? "Black" : "White"
}
let testChess = blackOrWhite(row: 1, column: 2)


//////////////3
/*
func reverseArray(array: [Int]) -> [Int] {
  var rArray = [Int]()
  
  var i = array.count - 1
  while i >= 0 {
    rArray.append(array[i])
    i -= 1
  }
  
  return rArray
}

let testArray = [2, 3, 1, 23, 1111]

reverseArray(array: testArray)
*/
/////////////4
func reverseArray(_ arrayA: inout [Int]) {
  var rArray = [Int]()
  var i = arrayA.count - 1
  while i >= 0 {
    rArray.append(arrayA[i])
    i -= 1
  }
  arrayA = rArray
}

var testArray = [2, 3, 1, 23, 1111]
reverseArray(&testArray)


////////////5
let testString = "1. Создать строку произвольного текста, минимум 200 символов. Используя цикл и оператор свитч посчитать количество гласных, согласных, цифр и символов.                       2. Создайте свитч который принимает возраст человека и выводит описание жизненного этапа                        3. У вас есть имя отчество и фамилия студента (русские буквы). Имя начинается с А или О, то обращайтесь к студенту по имени, если же нет, то если у него отчество начинается на В или Д, то обращайтесь к нему по имени и отчеству, если же опять нет, то в случае если фамилия начинается с Е или З, то обращайтесь к нему только по фамилии. В противном случае обращайтесь к нему по полному имени.                                                                                4. Представьте что вы играете в морской бои и у вас осталось некоторое количество кораблей на поле 10Х10 (можно буквы и цифры, а можно только цифры). Вы должны создать свитч, который примет тюпл с координатой и выдаст один из вариантов: мимо, ранил, убил.                             5. Создайте функцию, которая принимает строку, убирает из нее все знаки препинания, делает все гласные большими буквами, согласные маленькими, а цифры меняет на соответствующие слова (9 -> nine и тд)"

func editString(text: String) -> String {
  let vowelsArray: [Character] = ["а", "о", "э", "и", "у", "ы", "е", "ю", "я"]
  let consArray: [Character] = ["б", "в", "г", "д", "ж", "з", "й", "к", "л", "м", "н", "п", "р", "с", "т", "ф", "х", "ц", "ч", "ш", "щ"]
  let numberArray: [Character] = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]
  
  return ""
  
  
}


func avgArgs(params: Int...) {
  var count = 0
  var sum = 0
  for i in params {
    count += 1
    sum += i
  }
  let avg = sum / count
  print("you have a \(count) params and avg = \(avg)")
}
avgArgs(params: 1, 3, 4, 8)






